<?php

/**
 * @file
 * An Islandora viewer module using Video.js.
 */

use Drupal\Core\Url;

/**
 * Implements hook_islandora_viewer_info().
 */
function islandora_videojs_islandora_viewer_info() {
  return [
    'islandora_videojs' => [
      'label' => t('video.js player'),
      'description' => t('video.js for audio and/or video.'),
      'callback' => 'islandora_videojs_callback',
      'mimetype' => ['audio/mpeg', 'video/mp4'],
      'configuration' => 'islandora_videojs.admin',
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function islandora_videojs_theme($existing, $type, $theme, $path) {
  return [
    'islandora_videojs' => [
      'variables' => ['object' => NULL, 'params' => NULL],
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_islandora_videojs(array &$variables) {
  $params = $variables['params'];
  $variables['sources'] = [];
  if (isset($params['tn'])) {
    $variables['tn'] = $params['tn'];
  }
  if (isset($params['sources']) && is_array($params['sources'])) {
    $variables['sources'] = $params['sources'];
  }
  elseif (isset($params['url']) && isset($params['mime'])) {
    $variables['sources'][] = ['url' => $params['url'], 'mime' => $params['mime']];
  }
  $variables['center_play_button'] = \Drupal::config('islandora_videojs.settings')->get('islandora_videojs_center_play_button');
  $variables['responsive'] = \Drupal::config('islandora_videojs.settings')->get('islandora_videojs_responsive');
  $variables['hls'] = \Drupal::config('islandora_videojs.settings')->get('islandora_videojs_hls_library');
}

/**
 * Callback function to process media player.
 *
 * @param array $params
 *   Array with configuration info for the media player.
 */
function islandora_videojs_callback(array $params = []) {
  return [
    '#theme' => 'islandora_videojs',
    '#params' => $params,
  ];
}

/**
 * Implements hook_library_info_alter().
 */
function islandora_videojs_library_info_alter(&$libraries, $extension) {
  if ($extension != 'islandora_videojs') {
    return;
  }
  $library_path = libraries_get_path('video-js');
  $libraries['videojs']['js'][Url::fromUri("base:$library_path/video.js")->toString()] = [];
  $libraries['videojs']['css']['base'][Url::fromUri("base:$library_path/video-js.css")->toString()] = [];
  $libraries['videojs-hls']['js'][Url::fromUri("base:$library_path/videojs-contrib-hls.js")->toString()] = [];
}
